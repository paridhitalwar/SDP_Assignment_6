/**
 * Name: Paridhi Talwar
 * Course: CS-665 Software Designs & Patterns
 * Date: 11/27/2024
 * File Name: Main.java
 * Description: This is the main entry point of the delivery system application.
 * It initializes the shop, creates vehicles and drivers, and simulates the
 * process of making delivery requests and notifying drivers.
 */

package edu.bu.met.cs665;

import edu.bu.met.cs665.models.Car;
import edu.bu.met.cs665.models.Scooter;
import edu.bu.met.cs665.models.Vehicles;
import edu.bu.met.cs665.models.Driver;
import edu.bu.met.cs665.models.Shop;
import edu.bu.met.cs665.models.DeliveryRequest;  // Make sure to import the DeliveryRequest class

public class Main {

    /**
     * Main method to run the example.
     *
     * @param args command line arguments
     */
    public static void main(String[] args) {
        System.out.println("This is a test message from the Main class (Main.java file)");

        // Sample data for the delivery
        String item = "Electronics";
        String destination = "Cambridge";

        // Create instances of Vehicles (Car and Scooter)
        Vehicles car = new Car();         // Instance of Car
        Vehicles scooter = new Scooter(); // Instance of Scooter

        // Create Driver objects (ID will be automatically generated by IdGenerator)
        Driver driverMike = new Driver(car);    // Driver for car
        Driver driverSteve = new Driver(scooter); // Driver for scooter

        // Create a shop (the observable object)
        Shop electronicStore = new Shop();

        // Create the delivery request
        DeliveryRequest someDeliveryRequest = new DeliveryRequest("Order123", "123 Main St");

        // Testing main methods created for this project
        electronicStore.createDeliveryRequest(item, destination);
        electronicStore.addObserver(driverMike);
        electronicStore.addObserver(driverSteve);

        // Notify observers (drivers)
        electronicStore.alertObservers();

        // Update drivers with the created delivery request
        System.out.println("Driver Mike: ");
        System.out.println(driverMike);
        driverMike.update(someDeliveryRequest);  // Pass the created delivery request

        System.out.println("Driver Steve: ");
        System.out.println(driverSteve);
        driverSteve.update(someDeliveryRequest);  // Pass the created delivery request
    }
}
